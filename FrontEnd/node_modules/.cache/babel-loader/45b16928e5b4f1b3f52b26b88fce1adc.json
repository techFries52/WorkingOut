{"ast":null,"code":"/**\r\nA function that returns a universally unique identifier (uuid).  \r\nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\r\n@returns `string` : 32 character uuid (see example)\r\n*/\nfunction uuid() {\n  const hashTable = ['a', 'b', 'c', 'd', 'e', 'f', '0', '1', '2', '3', '4', '5', '6', '7', '8', '9'];\n  let uuid = [];\n\n  for (let i = 0; i < 35; i++) {\n    if (i === 7 || i === 12 || i === 17 || i === 22) {\n      uuid[i] = '-';\n    } else {\n      uuid[i] = hashTable[Math.floor(Math.random() * hashTable.length - 1)];\n    }\n  }\n\n  return uuid.join('');\n}\n\nmodule.exports = uuid;","map":{"version":3,"sources":["C:/Users/jjlau/Documents/GitHub/WorkingOut/FrontEnd/node_modules/react-uuid/uuid.js"],"names":["uuid","hashTable","i","Math","floor","random","length","join","module","exports"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA,SAASA,IAAT,GAAgB;AACd,QAAMC,SAAS,GAAG,CAChB,GADgB,EAEhB,GAFgB,EAGhB,GAHgB,EAIhB,GAJgB,EAKhB,GALgB,EAMhB,GANgB,EAOhB,GAPgB,EAQhB,GARgB,EAShB,GATgB,EAUhB,GAVgB,EAWhB,GAXgB,EAYhB,GAZgB,EAahB,GAbgB,EAchB,GAdgB,EAehB,GAfgB,EAgBhB,GAhBgB,CAAlB;AAkBA,MAAID,IAAI,GAAG,EAAX;;AACA,OAAK,IAAIE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AAC3B,QAAIA,CAAC,KAAK,CAAN,IAAWA,CAAC,KAAK,EAAjB,IAAuBA,CAAC,KAAK,EAA7B,IAAmCA,CAAC,KAAK,EAA7C,EAAiD;AAC/CF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAU,GAAV;AACD,KAFD,MAEO;AACLF,MAAAA,IAAI,CAACE,CAAD,CAAJ,GAAUD,SAAS,CAACE,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBJ,SAAS,CAACK,MAA1B,GAAmC,CAA9C,CAAD,CAAnB;AACD;AACF;;AACD,SAAON,IAAI,CAACO,IAAL,CAAU,EAAV,CAAP;AACD;;AAEDC,MAAM,CAACC,OAAP,GAAiBT,IAAjB","sourcesContent":["/**\r\nA function that returns a universally unique identifier (uuid).  \r\nexample: 1b83fd69-abe7-468c-bea1-306a8aa1c81d\r\n@returns `string` : 32 character uuid (see example)\r\n*/\r\nfunction uuid() {\r\n  const hashTable = [\r\n    'a',\r\n    'b',\r\n    'c',\r\n    'd',\r\n    'e',\r\n    'f',\r\n    '0',\r\n    '1',\r\n    '2',\r\n    '3',\r\n    '4',\r\n    '5',\r\n    '6',\r\n    '7',\r\n    '8',\r\n    '9'\r\n  ]\r\n  let uuid = []\r\n  for (let i = 0; i < 35; i++) {\r\n    if (i === 7 || i === 12 || i === 17 || i === 22) {\r\n      uuid[i] = '-'\r\n    } else {\r\n      uuid[i] = hashTable[Math.floor(Math.random() * hashTable.length - 1)]\r\n    }\r\n  }\r\n  return uuid.join('')\r\n}\r\n\r\nmodule.exports = uuid\r\n"]},"metadata":{},"sourceType":"script"}